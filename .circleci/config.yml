version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/WellFactored/play-bindings
    parallelism: 1

    #shell: /bin/bash --login

    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      JVM_OPTS: -Xmx512m
      TERM: dumb


    steps:
      - checkout

      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

      - run:
          working_directory: ~/WellFactored/play-bindings
          command: sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java; sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac; echo -e "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $BASH_ENV

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.sbt" }}
          - v1-dependencies-

      - run: cat /dev/null | sbt coverage +test:compile

      - run: sbt coverage +test:test

      - run: sbt +coverageReport codacyCoverage
      - run: mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - run: find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

      - save_cache:
          key: v1-dependencies-{{ checksum "build.sbt" }}
          paths:
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.cache/coursier

      # Teardown
      #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
